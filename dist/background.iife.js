(function(){"use strict";var O=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},D={exports:{}};(function(A,m){(function(x,d){d(A)})(typeof globalThis<"u"?globalThis:typeof self<"u"?self:O,function(x){if(!(globalThis.chrome&&globalThis.chrome.runtime&&globalThis.chrome.runtime.id))throw new Error("This script should only be loaded in a browser extension.");if(globalThis.browser&&globalThis.browser.runtime&&globalThis.browser.runtime.id)x.exports=globalThis.browser;else{const d="The message port closed before a response was received.",u=i=>{const h={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(Object.keys(h).length===0)throw new Error("api-metadata.json has not been included in browser-polyfill");class T extends WeakMap{constructor(s,n=void 0){super(n),this.createItem=s}get(s){return this.has(s)||this.set(s,this.createItem(s)),super.get(s)}}const w=e=>e&&typeof e=="object"&&typeof e.then=="function",b=(e,s)=>(...n)=>{i.runtime.lastError?e.reject(new Error(i.runtime.lastError.message)):s.singleCallbackArg||n.length<=1&&s.singleCallbackArg!==!1?e.resolve(n[0]):e.resolve(n)},p=e=>e==1?"argument":"arguments",y=(e,s)=>function(g,...a){if(a.length<s.minArgs)throw new Error(`Expected at least ${s.minArgs} ${p(s.minArgs)} for ${e}(), got ${a.length}`);if(a.length>s.maxArgs)throw new Error(`Expected at most ${s.maxArgs} ${p(s.maxArgs)} for ${e}(), got ${a.length}`);return new Promise((o,l)=>{if(s.fallbackToNoCallback)try{g[e](...a,b({resolve:o,reject:l},s))}catch(r){console.warn(`${e} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,r),g[e](...a),s.fallbackToNoCallback=!1,s.noCallback=!0,o()}else s.noCallback?(g[e](...a),o()):g[e](...a,b({resolve:o,reject:l},s))})},R=(e,s,n)=>new Proxy(s,{apply(g,a,o){return n.call(a,e,...o)}});let v=Function.call.bind(Object.prototype.hasOwnProperty);const E=(e,s={},n={})=>{let g=Object.create(null),a={has(l,r){return r in e||r in g},get(l,r,c){if(r in g)return g[r];if(!(r in e))return;let t=e[r];if(typeof t=="function")if(typeof s[r]=="function")t=R(e,e[r],s[r]);else if(v(n,r)){let k=y(r,n[r]);t=R(e,e[r],k)}else t=t.bind(e);else if(typeof t=="object"&&t!==null&&(v(s,r)||v(n,r)))t=E(t,s[r],n[r]);else if(v(n,"*"))t=E(t,s[r],n["*"]);else return Object.defineProperty(g,r,{configurable:!0,enumerable:!0,get(){return e[r]},set(k){e[r]=k}}),t;return g[r]=t,t},set(l,r,c,t){return r in g?g[r]=c:e[r]=c,!0},defineProperty(l,r,c){return Reflect.defineProperty(g,r,c)},deleteProperty(l,r){return Reflect.deleteProperty(g,r)}},o=Object.create(e);return new Proxy(o,a)},S=e=>({addListener(s,n,...g){s.addListener(e.get(n),...g)},hasListener(s,n){return s.hasListener(e.get(n))},removeListener(s,n){s.removeListener(e.get(n))}}),I=new T(e=>typeof e!="function"?e:function(n){const g=E(n,{},{getContent:{minArgs:0,maxArgs:0}});e(g)}),$=new T(e=>typeof e!="function"?e:function(n,g,a){let o=!1,l,r=new Promise(C=>{l=function(f){o=!0,C(f)}}),c;try{c=e(n,g,l)}catch(C){c=Promise.reject(C)}const t=c!==!0&&w(c);if(c!==!0&&!t&&!o)return!1;const k=C=>{C.then(f=>{a(f)},f=>{let N;f&&(f instanceof Error||typeof f.message=="string")?N=f.message:N="An unexpected error occurred",a({__mozWebExtensionPolyfillReject__:!0,message:N})}).catch(f=>{console.error("Failed to send onMessage rejected reply",f)})};return k(t?c:r),!0}),j=({reject:e,resolve:s},n)=>{i.runtime.lastError?i.runtime.lastError.message===d?s():e(new Error(i.runtime.lastError.message)):n&&n.__mozWebExtensionPolyfillReject__?e(new Error(n.message)):s(n)},L=(e,s,n,...g)=>{if(g.length<s.minArgs)throw new Error(`Expected at least ${s.minArgs} ${p(s.minArgs)} for ${e}(), got ${g.length}`);if(g.length>s.maxArgs)throw new Error(`Expected at most ${s.maxArgs} ${p(s.maxArgs)} for ${e}(), got ${g.length}`);return new Promise((a,o)=>{const l=j.bind(null,{resolve:a,reject:o});g.push(l),n.sendMessage(...g)})},B={devtools:{network:{onRequestFinished:S(I)}},runtime:{onMessage:S($),onMessageExternal:S($),sendMessage:L.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:L.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},M={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return h.privacy={network:{"*":M},services:{"*":M},websites:{"*":M}},E(i,B,h)};x.exports=u(chrome)}})})(D);const P=(A,m)=>{chrome.tabs.sendMessage(m,{action:"generatedCommentDelta",delta:A})},F=async(A,m,x,d)=>{const{authInfo:u}=await chrome.storage.local.get("authInfo");try{const i=await fetch("https://algoclan-extension-46b54a91a23b.herokuapp.com/api/ai/comment",{method:"POST",headers:{Accept:"text/event-stream",Authorization:`Bearer ${u.token}`,"Content-Type":"application/json"},body:JSON.stringify({personaId:m,linkedinPost:A})}),h=i.body.getReader(),T=new TextDecoder;console.log("response",i);let w=!1;for(;!w;){const{done:b,value:p}=await h.read(),y=T.decode(p);console.log(y),P(y,d),b&&(w=!0)}}catch(i){console.log({e:i})}},_=async({postHeader:A,postContent:m,commentThread:x,replyingTo:d},u)=>{var p;const{selectedPersonaId:i,selectedCommentTypeId:h}=await chrome.storage.sync.get(["selectedPersonaId","selectedCommentTypeId"]),{commentTypes:T}=await chrome.storage.local.get("commentTypes"),w=(p=T.find(y=>y._id===h))==null?void 0:p.prompt;console.log("commentTypePrompt: ",w,h,T);let b=`
    POST HEADER: 
    ${A}
    ------------------------------
    POST CONTENT: 
    ${m}
    ------------------------------
  `;x&&(b+=`
      COMMENT THREAD:
      ${x}
      ------------------------------
      `),b+=`
    REPLYING TO: 
    ${d}
  `,w&&(b+=`

${w}`),P("<clear>",u),await F(b,i,h,u),P("<end>",u),chrome.tabs.sendMessage(u,{action:"commentGenerationDone"})};chrome.runtime.onMessage.addListener((A,m,x)=>{var d,u;if(A.action==="initiateGenerate"){if(((d=m.tab)==null?void 0:d.id)===void 0)return;chrome.tabs.sendMessage(m.tab.id,{action:"getDataForCommentGeneration"})}else A.action==="commentGenerationData"&&_(A.data,((u=m==null?void 0:m.tab)==null?void 0:u.id)||0)}),chrome.action.onClicked.addListener(async A=>{const{hideUI:m}=await chrome.storage.session.get("hideUI");chrome.storage.session.set({hideUI:!m}),m&&chrome.tabs.query({url:"https://www.linkedin.com/*"}).then(x=>{x.length>0?chrome.tabs.update(x[0].id,{active:!0}):chrome.tabs.create({url:"https://www.linkedin.com/"})})}),chrome.storage.session.setAccessLevel({accessLevel:"TRUSTED_AND_UNTRUSTED_CONTEXTS"})})();
